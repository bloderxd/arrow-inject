FILE: context_receivers.kt
    package foo.bar

    @R|arrow/inject/annotations/Provider|() public final class X : R|kotlin/Any| {
        public constructor(): R|foo/bar/X| {
            super<R|kotlin/Any|>()
        }

    }
    @R|arrow/inject/annotations/Provider|() public final class Persistence2 : R|kotlin/Any| {
        public constructor(): R|foo/bar/Persistence2| {
            super<R|kotlin/Any|>()
        }

    }
    @R|arrow/inject/annotations/Provider|() public final class Y : R|kotlin/Any| {
        public constructor(): R|foo/bar/Y| {
            super<R|kotlin/Any|>()
        }

    }
    @R|arrow/inject/annotations/Provider|() public final class Z : R|kotlin/Any| {
        public constructor(): R|foo/bar/Z| {
            super<R|kotlin/Any|>()
        }

    }
    @R|arrow/inject/annotations/Provider|() public final class W : R|kotlin/Any| {
        public constructor(): R|foo/bar/W| {
            super<R|kotlin/Any|>()
        }

    }
    context(R|foo/bar/Persistence2|, R|foo/bar/X|, R|foo/bar/Y|, R|foo/bar/Z|, R|foo/bar/W|)
    public final class Repo : R|kotlin/Any| {
        public constructor(x: R|kotlin/Int|): R|foo/bar/Repo| {
            super<R|kotlin/Any|>()
        }

        public final val x: R|kotlin/Int| = R|<local>/x|
            public get(): R|kotlin/Int|

    }
    public final fun f(): R|kotlin/Int| {
        R|kotlin/io/println|(String(test))
        R|arrow/inject/annotations/context|<R|foo/bar/Persistence2|, R|foo/bar/X|, R|foo/bar/Y|, R|foo/bar/Z|, R|foo/bar/W|>()
        ^f R|foo/bar/Repo.Repo|(Int(0)).R|foo/bar/Repo.x|
    }
    public final fun f4(): R|kotlin/Int| {
        R|kotlin/io/println|(String(test))
        ^f4 R|kotlin/with|<R|foo/bar/Persistence2|, R|kotlin/Int|>(R|foo/bar/Persistence2.Persistence2|(), <L> = with@fun R|foo/bar/Persistence2|.<anonymous>(): R|kotlin/Int| <inline=Inline, kind=EXACTLY_ONCE>  {
            ^ R|kotlin/with|<R|foo/bar/X|, R|kotlin/Int|>(R|foo/bar/X.X|(), <L> = with@fun R|foo/bar/X|.<anonymous>(): R|kotlin/Int| <inline=Inline, kind=EXACTLY_ONCE>  {
                ^ R|kotlin/with|<R|foo/bar/Y|, R|kotlin/Int|>(R|foo/bar/Y.Y|(), <L> = with@fun R|foo/bar/Y|.<anonymous>(): R|kotlin/Int| <inline=Inline, kind=EXACTLY_ONCE>  {
                    ^ R|kotlin/with|<R|foo/bar/Z|, R|kotlin/Int|>(R|foo/bar/Z.Z|(), <L> = with@fun R|foo/bar/Z|.<anonymous>(): R|kotlin/Int| <inline=Inline, kind=EXACTLY_ONCE>  {
                        ^ R|kotlin/with|<R|foo/bar/W|, R|kotlin/Int|>(R|foo/bar/W.W|(), <L> = with@fun R|foo/bar/W|.<anonymous>(): R|kotlin/Int| <inline=Inline, kind=EXACTLY_ONCE>  {
                            ^ R|foo/bar/Repo.Repo|(Int(0)).R|foo/bar/Repo.x|
                        }
                        )
                    }
                    )
                }
                )
            }
            )
        }
        )
    }
    public final fun box(): R|kotlin/String| {
        lval result: R|kotlin/Int| = R|foo/bar/f|()
        ^box when () {
            ==(R|<local>/result|, Int(0)) ->  {
                String(OK)
            }
            else ->  {
                <strcat>(String(Fail: ), R|<local>/result|)
            }
        }

    }
